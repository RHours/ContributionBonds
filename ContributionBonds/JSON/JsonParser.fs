// Implementation file for parser generated by fsyacc
module internal Json.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open Internal.Utilities.Text.Lexing
open Internal.Utilities.Text.Parsing.ParseHelpers
# 1 "JSON\JsonParser.fsy"

open System

open Internal.Utilities.Text.Parsing

type JsonNumber =
    | JsonInteger   of int
    | JsonFloat     of float

type JsonValue = 
    | JsonObject    of (string * JsonValue) array
    | JsonArray     of JsonValue array
    | JsonString    of string
    | JsonNumber    of JsonNumber
    | JsonBool      of bool
    | JsonNull


# 25 "JSON\JsonParser.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | TRUE
  | FALSE
  | NULL
  | LBRACE
  | RBRACE
  | LBRACKET
  | RBRACKET
  | COMMA
  | COLON
  | STRING of (string)
  | INTEGER of (string)
  | FRACTION of (string)
  | EXPONENT of (string)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_TRUE
    | TOKEN_FALSE
    | TOKEN_NULL
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACKET
    | TOKEN_RBRACKET
    | TOKEN_COMMA
    | TOKEN_COLON
    | TOKEN_STRING
    | TOKEN_INTEGER
    | TOKEN_FRACTION
    | TOKEN_EXPONENT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startjson
    | NONTERM_json
    | NONTERM_value
    | NONTERM_object
    | NONTERM_members
    | NONTERM_jsonmember
    | NONTERM_array
    | NONTERM_elements
    | NONTERM_element
    | NONTERM_string
    | NONTERM_number

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | TRUE  -> 1 
  | FALSE  -> 2 
  | NULL  -> 3 
  | LBRACE  -> 4 
  | RBRACE  -> 5 
  | LBRACKET  -> 6 
  | RBRACKET  -> 7 
  | COMMA  -> 8 
  | COLON  -> 9 
  | STRING _ -> 10 
  | INTEGER _ -> 11 
  | FRACTION _ -> 12 
  | EXPONENT _ -> 13 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_TRUE 
  | 2 -> TOKEN_FALSE 
  | 3 -> TOKEN_NULL 
  | 4 -> TOKEN_LBRACE 
  | 5 -> TOKEN_RBRACE 
  | 6 -> TOKEN_LBRACKET 
  | 7 -> TOKEN_RBRACKET 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_COLON 
  | 10 -> TOKEN_STRING 
  | 11 -> TOKEN_INTEGER 
  | 12 -> TOKEN_FRACTION 
  | 13 -> TOKEN_EXPONENT 
  | 16 -> TOKEN_end_of_input
  | 14 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startjson 
    | 1 -> NONTERM_json 
    | 2 -> NONTERM_value 
    | 3 -> NONTERM_value 
    | 4 -> NONTERM_value 
    | 5 -> NONTERM_value 
    | 6 -> NONTERM_value 
    | 7 -> NONTERM_value 
    | 8 -> NONTERM_value 
    | 9 -> NONTERM_object 
    | 10 -> NONTERM_object 
    | 11 -> NONTERM_members 
    | 12 -> NONTERM_members 
    | 13 -> NONTERM_jsonmember 
    | 14 -> NONTERM_array 
    | 15 -> NONTERM_array 
    | 16 -> NONTERM_elements 
    | 17 -> NONTERM_elements 
    | 18 -> NONTERM_element 
    | 19 -> NONTERM_string 
    | 20 -> NONTERM_number 
    | 21 -> NONTERM_number 
    | 22 -> NONTERM_number 
    | 23 -> NONTERM_number 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 16 
let _fsyacc_tagOfErrorTerminal = 14

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | TRUE  -> "TRUE" 
  | FALSE  -> "FALSE" 
  | NULL  -> "NULL" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACKET  -> "LBRACKET" 
  | RBRACKET  -> "RBRACKET" 
  | COMMA  -> "COMMA" 
  | COLON  -> "COLON" 
  | STRING _ -> "STRING" 
  | INTEGER _ -> "INTEGER" 
  | FRACTION _ -> "FRACTION" 
  | EXPONENT _ -> "EXPONENT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACKET  -> (null : System.Object) 
  | RBRACKET  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INTEGER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FRACTION _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EXPONENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 4us; 65535us; 0us; 27us; 18us; 27us; 20us; 27us; 25us; 27us; 4us; 65535us; 0us; 3us; 18us; 3us; 20us; 3us; 25us; 3us; 2us; 65535us; 10us; 12us; 15us; 16us; 2us; 65535us; 10us; 14us; 15us; 14us; 4us; 65535us; 0us; 4us; 18us; 4us; 20us; 4us; 25us; 4us; 2us; 65535us; 20us; 22us; 25us; 26us; 4us; 65535us; 0us; 2us; 18us; 19us; 20us; 24us; 25us; 24us; 6us; 65535us; 0us; 5us; 10us; 17us; 15us; 17us; 18us; 5us; 20us; 5us; 25us; 5us; 4us; 65535us; 0us; 6us; 18us; 6us; 20us; 6us; 25us; 6us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 8us; 13us; 16us; 19us; 24us; 27us; 32us; 39us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 2us; 1us; 3us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 7us; 1us; 8us; 2us; 9us; 10us; 1us; 9us; 1us; 10us; 1us; 10us; 2us; 11us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 2us; 14us; 15us; 1us; 14us; 1us; 15us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 19us; 4us; 20us; 21us; 22us; 23us; 2us; 20us; 21us; 1us; 20us; 1us; 22us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 25us; 27us; 29us; 32us; 34us; 36us; 38us; 40us; 42us; 45us; 47us; 49us; 51us; 54us; 56us; 58us; 60us; 62us; 67us; 70us; 72us; |]
let _fsyacc_action_rows = 33
let _fsyacc_actionTableElements = [|7us; 32768us; 1us; 7us; 2us; 8us; 3us; 9us; 4us; 10us; 6us; 20us; 10us; 28us; 11us; 29us; 0us; 49152us; 0us; 16385us; 0us; 16386us; 0us; 16387us; 0us; 16388us; 0us; 16389us; 0us; 16390us; 0us; 16391us; 0us; 16392us; 2us; 32768us; 5us; 11us; 10us; 28us; 0us; 16393us; 1us; 32768us; 5us; 13us; 0us; 16394us; 1us; 16395us; 8us; 15us; 1us; 32768us; 10us; 28us; 0us; 16396us; 1us; 32768us; 9us; 18us; 7us; 32768us; 1us; 7us; 2us; 8us; 3us; 9us; 4us; 10us; 6us; 20us; 10us; 28us; 11us; 29us; 0us; 16397us; 8us; 32768us; 1us; 7us; 2us; 8us; 3us; 9us; 4us; 10us; 6us; 20us; 7us; 21us; 10us; 28us; 11us; 29us; 0us; 16398us; 1us; 32768us; 7us; 23us; 0us; 16399us; 1us; 16400us; 8us; 25us; 7us; 32768us; 1us; 7us; 2us; 8us; 3us; 9us; 4us; 10us; 6us; 20us; 10us; 28us; 11us; 29us; 0us; 16401us; 0us; 16402us; 0us; 16403us; 2us; 16407us; 12us; 30us; 13us; 32us; 1us; 16405us; 13us; 31us; 0us; 16404us; 0us; 16406us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 8us; 9us; 10us; 11us; 12us; 13us; 14us; 15us; 16us; 17us; 20us; 21us; 23us; 24us; 26us; 28us; 29us; 31us; 39us; 40us; 49us; 50us; 52us; 53us; 55us; 63us; 64us; 65us; 66us; 69us; 71us; 72us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 3us; 1us; 3us; 3us; 2us; 3us; 1us; 3us; 1us; 1us; 3us; 2us; 2us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 2us; 2us; 2us; 2us; 2us; 3us; 3us; 4us; 4us; 5us; 6us; 6us; 7us; 7us; 8us; 9us; 10us; 10us; 10us; 10us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 16385us; 16386us; 16387us; 16388us; 16389us; 16390us; 16391us; 16392us; 65535us; 16393us; 65535us; 16394us; 65535us; 65535us; 16396us; 65535us; 65535us; 16397us; 65535us; 16398us; 65535us; 16399us; 65535us; 65535us; 16401us; 16402us; 16403us; 65535us; 65535us; 16404us; 16406us; |]
let _fsyacc_reductions ()  =    [| 
# 191 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data :  JsonValue )) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startjson));
# 200 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'element)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 34 "JSON\JsonParser.fsy"
                                        _1 
                   )
# 34 "JSON\JsonParser.fsy"
                 :  JsonValue ));
# 211 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'object)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 37 "JSON\JsonParser.fsy"
                                  JsonValue.JsonObject(_1) 
                   )
# 37 "JSON\JsonParser.fsy"
                 : 'value));
# 222 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'array)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 38 "JSON\JsonParser.fsy"
                                  JsonValue.JsonArray(_1) 
                   )
# 38 "JSON\JsonParser.fsy"
                 : 'value));
# 233 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 39 "JSON\JsonParser.fsy"
                                  JsonValue.JsonString(_1) 
                   )
# 39 "JSON\JsonParser.fsy"
                 : 'value));
# 244 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'number)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 40 "JSON\JsonParser.fsy"
                                  JsonValue.JsonNumber(_1) 
                   )
# 40 "JSON\JsonParser.fsy"
                 : 'value));
# 255 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 41 "JSON\JsonParser.fsy"
                                 JsonValue.JsonBool(true) 
                   )
# 41 "JSON\JsonParser.fsy"
                 : 'value));
# 265 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 42 "JSON\JsonParser.fsy"
                                  JsonValue.JsonBool(false) 
                   )
# 42 "JSON\JsonParser.fsy"
                 : 'value));
# 275 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 43 "JSON\JsonParser.fsy"
                                 JsonValue.JsonNull 
                   )
# 43 "JSON\JsonParser.fsy"
                 : 'value));
# 285 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 46 "JSON\JsonParser.fsy"
                                           [| |] 
                   )
# 46 "JSON\JsonParser.fsy"
                 : 'object));
# 295 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'members)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 47 "JSON\JsonParser.fsy"
                                                 Array.ofList _2 
                   )
# 47 "JSON\JsonParser.fsy"
                 : 'object));
# 306 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'jsonmember)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 50 "JSON\JsonParser.fsy"
                                                        [ _1 ]  
                   )
# 50 "JSON\JsonParser.fsy"
                 : 'members));
# 317 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'jsonmember)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'members)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 51 "JSON\JsonParser.fsy"
                                                    _1 :: _3 
                   )
# 51 "JSON\JsonParser.fsy"
                 : 'members));
# 329 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'element)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "JSON\JsonParser.fsy"
                                                (_1, _3) 
                   )
# 54 "JSON\JsonParser.fsy"
                 : 'jsonmember));
# 341 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 57 "JSON\JsonParser.fsy"
                                               [| |] 
                   )
# 57 "JSON\JsonParser.fsy"
                 : 'array));
# 351 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'elements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "JSON\JsonParser.fsy"
                                                     (Array.ofList (_2)) 
                   )
# 58 "JSON\JsonParser.fsy"
                 : 'array));
# 362 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'element)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 61 "JSON\JsonParser.fsy"
                                                       [ _1 ] 
                   )
# 61 "JSON\JsonParser.fsy"
                 : 'elements));
# 373 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'element)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'elements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 62 "JSON\JsonParser.fsy"
                                                       _1 :: _3 
                   )
# 62 "JSON\JsonParser.fsy"
                 : 'elements));
# 385 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'value)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 65 "JSON\JsonParser.fsy"
                                                       _1 
                   )
# 65 "JSON\JsonParser.fsy"
                 : 'element));
# 396 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 68 "JSON\JsonParser.fsy"
                                                       _1 
                   )
# 68 "JSON\JsonParser.fsy"
                 : 'string));
# 407 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 71 "JSON\JsonParser.fsy"
                                                       JsonNumber.JsonFloat(System.Convert.ToDouble(_1 + _2 + _3)) 
                   )
# 71 "JSON\JsonParser.fsy"
                 : 'number));
# 420 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 72 "JSON\JsonParser.fsy"
                                                       JsonNumber.JsonFloat(System.Convert.ToDouble(_1 + _2)) 
                   )
# 72 "JSON\JsonParser.fsy"
                 : 'number));
# 432 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 73 "JSON\JsonParser.fsy"
                                                       JsonNumber.JsonFloat(System.Convert.ToDouble(_1 + _2)) 
                   )
# 73 "JSON\JsonParser.fsy"
                 : 'number));
# 444 "JSON\JsonParser.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 74 "JSON\JsonParser.fsy"
                                                       JsonNumber.JsonInteger(System.Convert.ToInt32(_1)) 
                   )
# 74 "JSON\JsonParser.fsy"
                 : 'number));
|]
# 456 "JSON\JsonParser.fs"
let tables () : Internal.Utilities.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Internal.Utilities.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 17;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let json lexer lexbuf :  JsonValue  =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
